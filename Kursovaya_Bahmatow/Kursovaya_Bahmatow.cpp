
#include <iostream>
#include <fstream>
#include <chrono>

using namespace std;
void InputBool(bool Array[20], int Lenght);
void OutputBool(bool Array[20], int Lenght);
void ZeroBoolArray(bool Array[20], int Lenght);
void LogicYWU();
void ChangeA();
string OutputName();
void v9Miliv1_logic();
void MergeAX();
bool FindInArr(int Arr[14], int Arr2[20][14], int Len1, int Len2);
void FindYWU();
void v9Mili_matrix();

bool y[15];
bool x[10];
bool a[4];
bool w[4];
bool u[4];
string StateName[13] = { "S0 ", "S1 ", "S2 ", "S3 ", "S4 ", "S5 ", "S6 ", "S7 ", "S8 ", "S9 ", "S10", "S11", "S12" };
bool CycleCheck[13] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
bool CycleFlag = 0;
int Ylen[15] = {3, 2, 1, 2, 3, 2, 1, 2, 2, 3, 1, 2, 1, 1, 2};
int Wlen[4] = { 10,5,2,7 };
int Ulen[4] = { 12,9,10,4 };
int Y1[3][14] = { {0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,1 },  {0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 }, {0,0,0,0,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 } };
int Y2[2][14] = { {0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1 }, {0,1,0,0,-1,-1,-1,-1,-1,0,-1,-1,-1,-1 }};
int Y3[1][14] = { {0,0,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y4[2][14] = { {0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 }, {0,0,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1 } };
int Y5[3][14] = { {0,0,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1 }, {1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 }, {1,0,0,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 } };
int Y6[2][14] = { {0,1,0,0,-1,-1,-1,-1,-1,1,-1,-1,-1,-1 }, {1,0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y7[1][14] = { {0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y8[2][14] = { {0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 }, {1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y9[3][14] = { {0,1,1,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1 }, {1,0,0,1,-1,-1,-1,-1,0,-1,1,-1,1,-1 }, {1,1,0,0,-1,-1,-1,-1,1,-1,1,-1,0,-1 } };
int Y10[3][14] = { {0,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1 }, {0,1,1,1,-1,-1,1,-1,-1,-1,-1,-1,1,0 }, {1,1,0,0,-1,-1,1,-1,1,-1,-1,-1,1,-1 } };
int Y11[1][14] = { {1,0,0,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y12[2][14] = { {1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 }, {1,0,0,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 } };
int Y13[1][14] = { {1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y14[1][14] = { {1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int Y15[2][14] = { {0,0,1,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1 }, {1,1,0,0,-1,-1,-1,-1,1,-1,0,-1,0,-1 } };

int AX[14];

int W0[10][14] = { {0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,1 }, 
	{0,1,0,0,-1,-1,-1,-1,-1,1,-1,-1,-1,-1 }, 
	{1,0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1 },
	{1,0,1,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1 },
	{1,1,0,0,-1,-1,-1,-1,1,-1,1,-1,0,-1 },
	{0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 },
	{0,0,0,0,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 },
	{0,0,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 },
	{0,1,0,0,-1,-1,-1,-1,-1,0,-1,-1,-1,-1 },
	{0,1,1,0,-1,-1,-1,-1,1,-1,-1,-1,-1,-1 } };
int W1[6][14] = { {0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 },
	{1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 },
	{1,0,0,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 },
	{1,1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1 },
	{1,1,0,0,-1,-1,-1,-1,1,-1,1,-1,0,-1 },
	{0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1 } };
int W2[2][14] = { {0,0,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1 },
	{1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 } };
int W3[7][14] = { {0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 },
	{0,0,0,0,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 } ,
	{0,1,1,1,-1,-1,-1,0,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,0,-1,-1,-1,-1,-1,1,1 },
	{0,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0 },
	{0,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,1,-1,-1,-1,-1,-1,1,0} };

int U0[12][14] = { {0,0,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1}, 
	{0,0,1,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1}, 
	{0,1,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1}, 
	{0,1,1,1,-1,-1,-1,0,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,0,-1,-1,-1,-1,-1,1,1 },
	{0,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0 },
	{0,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,1,-1,-1,-1,-1,-1,1,0}, 
	{1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 }, 
	{1,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1 },
	{1,0,0,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1 },
	{0,0,0,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1 } };
int U1[9][14] = { {0,1,1,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1},
	{1,0,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1 },
	{0,1,1,1,-1,-1,-1,0,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,0,-1,-1,-1,-1,-1,1,1 },
	{0,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0 },
	{0,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,1,-1,-1,-1,-1,-1,1,0},
	{0,0,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1},
	{0,0,1,1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1}, };
int U2[10][14] = { {0,1,1,1,-1,-1,-1,0,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,0,-1,-1,-1,-1,-1,1,1 },
	{0,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,0,0 },
	{0,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1 },
	{0,1,1,1,-1,-1,1,-1,-1,-1,-1,-1,1,0}, 
	{1,1,0,0,-1,-1,-1,-1,0,-1,-1,-1,-1,-1 },
	{1,1,0,0,-1,-1,1,-1,1,-1,-1,-1,1,-1 },
	{1,1,0,0,1,-1,0,-1,1,-1,-1,-1,-1,-1 },
	{1,1,0,0,-1,-1,-1,-1,1,-1,0,-1,0,-1 }, 
	{1,1,0,0,-1,-1,0,-1,1,-1,-1,-1,1,-1 }, };
int U3[4][14] = { {1,0,0,0,-1,0,-1,-1,-1,-1,-1,-1,-1,-1 },
	{1,0,0,0,-1,1,-1,-1,-1,-1,-1,-1,-1,-1 }, 
	{1,1,0,0,-1,-1,-1,-1,1,-1,1,-1,0,-1 }, 
	{1,1,0,0,-1,-1,-1,-1,1,-1,0,-1,0,-1 }, };
int main()
{
	int n;
	InputBool(x, 10);
	cout << "X(x10 - x1) = ";
	OutputBool(x, 10);
	cout << endl;
	cout << "Input mode: 1 - Matrix, 2 - Logics ";
	cin >> n;
	if (x[0] && (x[1] || x[2]))
	{
		cout << "Incorrect data (x1 & (x2 | x3))\n";
		system("pause");
		exit;
	}
	if (n == 1) v9Mili_matrix();
	else if (n == 2) v9Miliv1_logic();
	else
	{
		cout << "Incorrect mode)\n";
		system("pause");
		exit;
	}
	system("pause");
}
void FindYWU()
{
	y[0] = FindInArr(AX, Y1, 3, 14);
	y[1] = FindInArr(AX, Y2, 2, 14);
	y[2] = FindInArr(AX, Y3, 1, 14);
	y[3] = FindInArr(AX, Y4, 2, 14);
	y[4] = FindInArr(AX, Y5, 3, 14);
	y[5] = FindInArr(AX, Y6, 2, 14);
	y[6] = FindInArr(AX, Y7, 1, 14);
	y[7] = FindInArr(AX, Y8, 2, 14);
	y[8] = FindInArr(AX, Y9, 3, 14);
	y[9] = FindInArr(AX, Y10, 3, 14);
	y[10] = FindInArr(AX, Y11, 1, 14);
	y[11] = FindInArr(AX, Y12, 2, 14);
	y[12] = FindInArr(AX, Y13, 1, 14);
	y[13] = FindInArr(AX, Y14, 1, 14);
	y[14] = FindInArr(AX, Y15, 2, 14);

	w[0] = FindInArr(AX, W0, 10, 14);
	w[1] = FindInArr(AX, W1, 6, 14);
	w[2] = FindInArr(AX, W2, 2, 14);
	w[3] = FindInArr(AX, W3, 7, 14);

	u[0] = FindInArr(AX, U0, 12, 14);
	u[1] = FindInArr(AX, U1, 9, 14);
	u[2] = FindInArr(AX, U2, 10, 14);
	u[3] = FindInArr(AX, U3, 4, 14);
}
bool FindInArr(int Arr[14],int Arr2[20][14], int Len1, int Len2)
{
	for (int i = 0; i < Len1; i++)
	{
		int k = 0;
		for (int j = 0; j < Len2; j++)
		{
			if (Arr2[i][j] != -1) 
			{
				if (Arr[j] == Arr2[i][j])
				{
					k++;
					continue;
				}
				else
				{
					break;
				}
			}
			else
			{
				k++;
			}
		}
		if (k == 14) return 1;
	}
	return 0;
}
void v9Mili_matrix()
{
	auto begin = chrono::high_resolution_clock::now();
	ZeroBoolArray(a, 4);
	cout << "State = ";
	OutputName();
	cout << "Y(y15 - y1) = ";
	OutputBool(y, 15);
	cout << "Code(a3 - a0) = ";
	OutputBool(a, 4);
	cout << endl;
	ZeroBoolArray(y, 15);
	ZeroBoolArray(w, 4);
	ZeroBoolArray(u, 4);
	for (int i = 0; i < 20; i++)
	{
		MergeAX();
		FindYWU();
		ChangeA();
		cout << "State = ";
		OutputName();
		cout << "Y(y15 - y1) = ";
		OutputBool(y, 15);
		cout << "Code(a3 - a0) = ";
		OutputBool(a, 4);
		if (CycleFlag == 1)
		{
			CycleFlag = 0;
			cout << "\nCycle\n";
			break;
		}
		ZeroBoolArray(y, 15);
		ZeroBoolArray(w, 4);
		ZeroBoolArray(u, 4);
		cout << endl;

	}
	auto end = chrono::high_resolution_clock::now();
	cout << chrono::duration_cast<chrono::nanoseconds>(end - begin).count() / 1000000 << "ms" << endl;
}
void v9Miliv1_logic()
{
	auto begin = chrono::high_resolution_clock::now();
	ZeroBoolArray(y, 15);
	ZeroBoolArray(a, 4);
	for (int i = 0; i < 20; i++)
	{
		cout << "State = ";
		OutputName();
		cout << "Y(y15 - y1) = ";
		OutputBool(y, 15);
		cout << "Code(a3 - a0) = ";
		OutputBool(a, 4);
		if (CycleFlag == 1)
		{
			CycleFlag = 0;
			cout << "\nCycle\n";
			break;
		}
		LogicYWU();
		ChangeA();
		cout << endl;
	}
	auto end = chrono::high_resolution_clock::now();
	cout << chrono::duration_cast<chrono::nanoseconds>(end - begin).count() / 1000000 << "ms" << endl;
}
void MergeAX()
{
	int i = 0;
	int k = 3;
	while (k >= 0)
	{
		AX[i] = a[k];
		k--;
		i++;
	}
	k = 9;
	while (k >= 0)
	{
		AX[i] = x[k];
		k--;
		i++;
	}
}
void LogicYWU()
{
	y[0] = !a[3] && !a[2] && !a[1] && !a[0] && x[0] || !a[3] && !a[2] && !a[1] && !a[0] && x[1] 
		|| !a[3] && !a[2] && !a[1] && !a[0] && x[2];
	y[1] = !a[3] && !a[2] && !a[1] && a[0] && x[0] || !a[3] && a[2] && !a[1] && !a[0] && !x[4];
	y[2] = !a[3] && !a[2] && a[1] && !a[0];
	y[3] = !a[3] && a[2] && !a[1] && a[0] || !a[3] && !a[2] && a[1] && a[0] && x[3];
	y[4] = !a[3] && !a[2] && a[1] && a[0] && x[3] || a[3] && !a[2] && !a[1] && a[0] && x[1] 
		|| a[3] && !a[2] && !a[1] && a[0] && x[2];
	y[5] = !a[3] && a[2] && !a[1] && !a[0] && x[4] || a[3] && !a[2] && a[1] && !a[0] && x[9];
	y[6] = !a[3] && a[2] && !a[1] && a[0];
	y[7] = !a[3] && a[2] && !a[1] && a[0] || a[3] && !a[2] && a[1] && a[0];
	y[8] = !a[3] && a[2] && a[1] && !a[0] && x[5] || a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && x[3];
	y[9] = !a[3] && a[2] && a[1] && a[0] && x[0] && x[6] || !a[3] && a[2] && a[1] && a[0] && !x[0] && x[1] && x[7] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && x[1] && x[7];
	y[10] = a[3] && !a[2] && !a[1] && !a[0] && x[8];
	y[11] = a[3] && !a[2] && !a[1] && a[0] && x[1] || a[3] && !a[2] && !a[1] && a[0] && x[2];
	y[12] = a[3] && !a[2] && a[1] && a[0];
	y[13] = a[3] && !a[2] && a[1] && a[0];
	y[14] = !a[3] && !a[2] && a[1] && a[0] && !x[3] || a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && !x[3];

	w[0] = !a[3] && !a[2] && !a[1] && !a[0] && x[0]
		|| !a[3] && a[2] && !a[1] && !a[0] && x[4]
		|| a[3] && !a[2] && a[1] && !a[0] && x[9] 
		|| a[3] && !a[2] && a[1] && !a[0] && !x[9] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && x[3] 
		|| !a[3] && !a[2] && a[1] && !a[0]
		|| !a[3] && !a[2] && !a[1] && !a[0] && x[1] 
		|| !a[3] && !a[2] && !a[1] && !a[0] && x[2]
		|| !a[3] && a[2] && !a[1] && !a[0] && !x[4]
		|| !a[3] && a[2] && a[1] && !a[0] && x[5];
	w[1] = !a[3] && a[2] && !a[1] && a[0] 
		|| a[3] && !a[2] && !a[1] && a[0] && x[1] 
		|| a[3] && !a[2] && !a[1] && a[0] && x[2] 
		|| a[3] && a[2] && !a[1] && !a[0] && !x[5] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && x[3]
		|| !a[3] && !a[2] && !a[1] && a[0] && x[0];
	w[2] = !a[3] && !a[2] && a[1] && a[0] && x[3]
		|| a[3] && !a[2] && a[1] && a[0];
	w[3] = 
		!a[3] && !a[2] && !a[1] && !a[0] && (x[1] || x[2]) 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && !x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[1] && !x[7] 
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && !x[1] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && x[1] && x[7];

	u[0] = !a[3] && !a[2] && a[1] && a[0] && x[3] 
		|| !a[3] && !a[2] && a[1] && a[0] && !x[3] 
		|| !a[3] && a[2] && !a[1] && a[0]
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && x[1] && x[7]
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && !x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[1] && !x[7]
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && !x[1] 
		|| a[3] && !a[2] && a[1] && a[0] 
		|| !a[3] && !a[2] && !a[1] && a[0] && x[0]
		|| a[3] && !a[2] && !a[1] && a[0] && x[1]
		|| a[3] && !a[2] && !a[1] && a[0] && x[2];
	

	u[1] = 
		!a[3] && !a[2] && a[1] && a[0] && x[3] 
		|| !a[3] && !a[2] && a[1] && a[0] && !x[3] 
		|| !a[3] && a[2] && a[1] && !a[0] && !x[5] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && x[1] && x[7]
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && !x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[1] && !x[7]
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && !x[1] 
		|| a[3] && !a[2] && a[1] && a[0];

	u[2] = !a[3] && a[2] && a[1] && a[0] && x[0] && x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && x[1] && x[7]
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && !x[6] 
		|| !a[3] && a[2] && a[1] && a[0] && x[0] && x[1] && !x[7]
		|| !a[3] && a[2] && a[1] && a[0] && !x[0] && !x[1]
		|| a[3] && a[2] && !a[1] && !a[0] && !x[5] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && x[1] && x[7]
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && x[9] && !x[7]
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && !x[3]
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && x[1] && !x[7];
		
	u[3] = a[3] && !a[2] && !a[1] && !a[0] && !x[8] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && x[3] 
		|| a[3] && a[2] && !a[1] && !a[0] && x[5] && !x[1] && !x[3]
		|| a[3] && !a[2] && !a[1] && !a[0] && x[8];
}
string OutputName()
{
	int sum = 0;
	if (a[0] == 1)
	{
		sum += 1;
	}
	if (a[1] == 1)
	{
		sum += 2;
	}
	if (a[2] == 1)
	{
		sum += 4;
	}
	if (a[3] == 1)
	{
		sum += 8;
	}
	if (CycleCheck[sum] == 1)
	{
		CycleFlag = 1;
	}
	CycleCheck[sum] = 1;
	cout << StateName[sum] << "    ";
	return StateName[sum];
}

void ChangeA()
{
	for (int i = 3; i >= 0; i--)
	{
		if (w[i] == 1)
		{
			a[i] = 1;
		}
		if (u[i] == 1)
		{
			a[i] = 0;
		}
	}
}
void ZeroBoolArray(bool Array[20], int Lenght)
{
	for (int i = 0; i < Lenght; i++)
	{
		Array[i] = 0;
	}
}
void InputBool(bool Array[20], int Lenght)
{
	int tmp;
	ifstream fin;
	fin.open("C:\\TA\\Kurs.txt", ios::in);
	for (int i = 0; i < Lenght; i++)
	{
		fin >> tmp;
		if (tmp > 1 || tmp < 0)
		{
			cout << "Incorrect data\n";
			system("pause");
			exit;
		}
		Array[i] = tmp;
	}
	fin.close();
}
void OutputBool(bool Array[20], int Lenght)
{
	for (int i = Lenght - 1; i >= 0; i--)
	{
		cout << Array[i] << " ";		
	}
	cout << "	";
}

